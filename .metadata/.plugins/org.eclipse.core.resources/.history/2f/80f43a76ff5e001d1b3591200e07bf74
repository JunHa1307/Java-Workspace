package com.kh.variable;

public class C_Cast {
	/*
	 * 형 변환 : 값의 자료형을 바꾸는 개념
	 * 
	 * 컴퓨터 상에서의 값 처리 규칙 1. 대입 연산자(=)를 기준으로 왼쪽과 오른쪽은 같은 자료형이어야 한다. => 즉, 같은 자료형에 해당하는
	 * 값만 대입이 가능하다. => 다른 자료형의 값을 대입하고자 한다면 "형변환"이 필수. [표현법]자료형 변수명 = (바꿀 자료형) 값;
	 * 
	 * 2. 같은 자료형 끼리만 연산이 가능하다. => 즉, 다른 자료형끼리 연산을 수행하고 싶으면 한 구문은 "형변환"을 해야한다. [표현법]
	 * 값+ (바꿀자료형) 값;
	 * 
	 * 형 변환의 종류: 1. 자동 형 변환 => 자동으로 형변환이 진행되기 때문에 내가 직접 형변환할 필요가 없음. => 작은바이트의 자료형
	 * => 큰바이트의 자료형 2. 강제(명시적) 형변환 => 자동형변환이 되지 않아 내가 직접 강제로 형변환을 해야하는 경우 큰바이트의
	 * 자료형=> 작은 바이트의 자료형
	 * 
	 * [표현법] (바꿀자료형) 값;
	 * 
	 * (바꿀자료형) == 형변환연산자 ==cast 연산자
	 * 
	 * **boolean은 형변환 불가
	 */
	// 자동형변환 : 작은바이트의 자료형이 큰 바이트의 자료형으로 변환되는 경우
	public void autocasting() {
		// 1. int (4byte) -> double (8byte)
		int i1 = 10;
		double d1 = (double) i1; // 자동으로 형변환
									// 컴퓨터 포장용 상자에 휴대폰을 담은 모양새
									// int는 정수, double은 실수형임 -> d1은 10.0으로 형변환이 된다.
		System.out.println("d1 : " + d1);
		
		int i2 = 12;
		double d2 = 3.3;
		
		double result = /*(double)*/ i2 +d2;
	}

}
